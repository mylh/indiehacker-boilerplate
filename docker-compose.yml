services:
  web:
    build:
      context: .
      dockerfile: web/backend/Dockerfile
    volumes:
      - ./:/home/user/app/
      - /tmp:/tmp
    user: "1000:1000"
    ports:
      - "8000:8000"
    env_file: web/backend/local_dev.env
    container_name: {{project_name}}_web

  frontend:
    build:
      dockerfile: web/frontend/Dockerfile
      context: .
    volumes:
      - .:/app/
      - /app/node_modules
    ports:
      - "3000:3000"
    container_name: {{project_name}}_frontend

  # db:
  #   image: postgres:alpine
  #   environment:
  #     POSTGRES_HOST_AUTH_METHOD: trust
  #   volumes:
  #     - ./1_create__user.sql:/docker-entrypoint-initdb.d/1_create_user.sql
  #     - ./2_create_db.sql:/docker-entrypoint-initdb.d/2_create_db.sql
  #     - {{ project_name }}_pgdata:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   container_name: {{project_name}}_db

  # rabbit:
  #   image: rabbitmq:alpine
  #   container_name: {{project_name}}_rabbitmq

  # memcache:
  #   image: memcached:latest
  #   ports:
  #    - "11211:11211"
  #   entrypoint:
  #      - memcached
  #      - -m 64
  #   container_name: {{project_name}}_cache

  # Uncomment `redis` and `celery` services below if you plan to use
  # celery tasks and background processing
  # redis:
  #   image: 'bitnami/redis:latest'
  #   ports:
  #     - 6379:6379
  #   environment:
  #     - ALLOW_EMPTY_PASSWORD=yes
  #   container_name: {{project_name}}_redis

  # celery:
  #   build:
  #     dockerfile: web/backend/Dockerfile
  #     context: .
  #   command: python manage.py celery
  #   volumes:
  #     - ./:/home/user/app/
  #   env_file: web/backend/local_dev.env
  #   depends_on:
  #     - redis
  #   container_name: {{project_name}}_celery

  # service for faking a SMTP server
  # uncomment if you want to debug sending emails locally
  # mailhog:
  #   image: mailhog/mailhog
  #   ports:
  #     - '1025:1025' # smtp server
  #     - '8025:8025' # web ui
  #   container_name: {{project_name}}_mailhog

#volumes:
#  {{project_name}}_pgdata:
