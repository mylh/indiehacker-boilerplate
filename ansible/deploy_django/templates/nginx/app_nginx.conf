limit_req_zone $binary_remote_addr zone={{ app_name }}_zone:10m rate=10r/s;

server {
    # if no Host match, close the connection to prevent host spoofing
    listen 80 default_server;
    return 444;
}

server {
    listen       {{ nginx_listen_address }}:80;
    server_name  www.{{ nginx_hostname }} {% for alias in nginx_domain_aliases %}{{ alias }} {% endfor %};
    return       301 https://{{ nginx_hostname }}$request_uri;
}

upstream app_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response

    # for UNIX domain socket setups
    # server unix:/tmp/gunicorn.sock fail_timeout=0;

    # for a TCP configuration
    server 127.0.0.1:8000 fail_timeout=0;
}

server {
    listen       {{ nginx_listen_address}}:80;
    server_name  {{ nginx_hostname }} {% for alias in nginx_domain_aliases %}{{ alias }} {% endfor %} {% for sd in subdomains %}{{sd}} {% endfor %};
    charset     utf-8;
    access_log   {{ install_path }}/logs/nginx/{{ app_name }}_access.log;
    error_log    {{ install_path }}/logs/nginx/{{ app_name }}_error.log info;

    client_max_body_size {{ nginx_client_max_body_size }};

    #CloudFlare
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 104.16.0.0/12;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 131.0.72.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 199.27.128.0/21;
    set_real_ip_from 2400:cb00::/32;
    set_real_ip_from 2606:4700::/32;
    set_real_ip_from 2803:f800::/32;
    set_real_ip_from 2405:b500::/32;
    set_real_ip_from 2405:8100::/32;
    set_real_ip_from 2c0f:f248::/32;
    set_real_ip_from 2a06:98c0::/29;

    real_ip_header CF-Connecting-IP;

    location /robots.txt {
      alias {{ nginx_static_path }}/robots.txt;
    }

    {% if nginx_serve_static %}
    location /static/  {
        alias   {{ nginx_static_path }};
        gzip on;
        gzip_min_length 1000;
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;
        expires 8d;
        add_header Cache-Control public,max-age=691200;
    }
    {% endif %}

    {% if nginx_serve_media %}
    location /media/  {
        alias   {{ nginx_media_path }};
        gzip on;
        gzip_min_length 1000;
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;
        expires 8d;
        add_header Cache-Control public,max-age=691200;
    }
    {% endif %}


    location / {
      # checks for static file, if not found proxy to app
      try_files $uri @proxy_to_app;
      {% if nginx_serve_static %}
      # limit request rate to web app
      limit_req zone={{app_name}}_zone burst=5;
      {% endif %}
      {% if nginx_basic_auth %}
      auth_basic "Access Restricted";
      auth_basic_user_file /etc/nginx/.htpasswd;
      {% endif %}

    }

    location @proxy_to_app {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://app_server;
    }

}

{% if install_ssl %}
# server {
#     listen      443;

#     server_name www.{{app_nginx_hostname}};
#     charset     utf-8;

#     client_max_body_size 50K;

#     ssl on;
#     ssl_certificate {{install_path}}ssl/domain.crt;
#     ssl_certificate_key {{install_path}}ssl/domain.key;

#     return 301 https://{{app_nginx_hostname}}$request_uri;
# }



server {
    listen       {{ nginx_listen_address}}:443;
    server_name  {{ nginx_hostname }};
    charset     utf-8;
    access_log   {{ install_path }}/logs/nginx/{{ app_name }}_access.log;
    error_log    {{ install_path }}/logs/nginx/{{ app_name }}_error.log info;

    client_max_body_size 2MB;


    {% if nginx_serve_static %}
    location /static/  {
        alias   {{ app_nginx_static_path }};
        gzip on;
        gzip_min_length 1000;
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;
        expires 8d;
        add_header Cache-Control public,max-age=691200;
    }
    {% endif %}

    {% if nginx_serve_media %}
    location /media/  {
        alias   {{ app_nginx_media_path }};
        gzip on;
        gzip_min_length 1000;
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;
        expires 8d;
        add_header Cache-Control public,max-age=691200;
    }
    {% endif %}

    location /robots.txt {
      alias {{ app_nginx_static_path }}/robots.txt;
    }

    ssl on;
    ssl_certificate {{install_path}}/ssl/{{domain}}.crt;
    ssl_certificate_key {{install_path}}/ssl/{{domain}}.key;

    location / {
      limit_req zone={{app_name}}_zone burst=5;
      # checks for static file, if not found proxy to app
      try_files $uri @proxy_to_app;

      {% if nginx_basic_auth %}
      auth_basic "Access Restricted";
      auth_basic_user_file /etc/nginx/.htpasswd;
      {% endif %}

    }

    location @proxy_to_app {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://app_server;
    }


    # gzip on;
    # gzip_comp_level 6;
    # gzip_min_length 1100;
    # gzip_buffers 16 8k;
    # gzip_proxied any;
    # gzip_vary on;
    # gzip_types image/svg+xml text/plain text/css text/js text/xml text/javascript application/javascript application/x-javascript application/json application/xml application/xml+rss;
}

{% for subdomain in subdomains %}
# SSL {{subdomain}}
server {
    listen       {{ nginx_listen_address }}:443;
    server_name  {{ subdomain }};
    charset     utf-8;
    access_log   {{ install_path }}/logs/nginx/{{ subdomain }}_access.log;
    error_log    {{ install_path }}/logs/nginx/{{ subdomain }}_error.log info;

    client_max_body_size 50K;

    location /robots.txt {
      alias {{install_path}}/static/robots.txt;
    }

    {% if nginx_serve_static %}
    location /static/  {
        alias   {{ nginx_static_path }};
        gzip on;
        gzip_min_length 1000;
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;
        expires 8d;
        add_header Cache-Control public,max-age=691200;
    }
    {% endif %}

    ssl on;
    ssl_certificate {{install_path}}/ssl/{{subdomain}}.crt;
    ssl_certificate_key {{install_path}}/ssl/{{subdomain}}.key;

    location / {
      limit_req zone={{app_name}}_zone burst=5;
      # checks for static file, if not found proxy to app
      try_files $uri @proxy_to_app;

      {% if nginx_basic_auth %}
      auth_basic "Access Restricted";
      auth_basic_user_file /etc/nginx/.htpasswd;
      {% endif %}

    }

    location @proxy_to_app {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://app_server;
    }


    # gzip on;
    # gzip_comp_level 6;
    # gzip_min_length 1100;
    # gzip_buffers 16 8k;
    # gzip_proxied any;
    # gzip_vary on;
    # gzip_types image/svg+xml text/plain text/css text/js text/xml text/javascript application/javascript application/x-javascript application/json application/xml application/xml+rss;
}
{% endfor %}

{% endif %}